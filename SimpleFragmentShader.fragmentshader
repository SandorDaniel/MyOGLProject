// TODO: material color

#version 330 core


// Interpolated values from the vertex shaders
in vec4 out_vert_pos;
in vec4 out_vert_nor;
in vec2 out_vert_tex;

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;


void main()
{
    vec3 light_col = vec3(1.0f, 1.0f, 0.0f);

	vec3 light_pos = vec3(0.0f, 0.0f, 100.0f);
	vec3 light_dir = normalize(light_pos - out_vert_pos.xyz);

	vec3 diffuse = clamp(dot( out_vert_nor.xyz, light_dir ), 0.0f, 1.0f) * light_col; // clamp: if dot product of the light direction and the surface normal is negative, then the reflected diffuse light is zero

	light_col = diffuse;

    color = texture( myTextureSampler, out_vert_tex.st ); // color of the texture at the specified st
	color.rgb *= light_col;
}